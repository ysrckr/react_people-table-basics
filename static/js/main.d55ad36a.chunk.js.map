{"version":3,"sources":["components/Navigation/Navigation.tsx","api.ts","hooks/useFetchPeople.ts","components/PersonLink/PersonLink.tsx","components/Loader/Loader.tsx","components/PeopleTable/PeopleTable.tsx","pages/PeoplePage.tsx","App.tsx","index.tsx"],"names":["Navigation","location","useLocation","className","role","cn","pathname","to","startsWith","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","useFetchPeople","useState","people","setPeople","useQuery","onSuccess","data","map","person","mother","find","name","motherName","father","fatherName","isLoading","isError","isFetching","PersonLink","slug","sex","Loader","PeopleTable","useParams","born","died","PeoplePage","App","path","element","replace","queryClient","QueryClient","createRoot","document","getElementById","render","client"],"mappings":"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","file":"static/js/main.d55ad36a.chunk.js","sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport cn from 'classnames';\n\nexport const Navigation = () => {\n  const location = useLocation();\n\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <Link\n            className={cn('navbar-item', {\n              'has-background-grey-lighter': location.pathname === '/',\n            })}\n            to=\"/\"\n          >\n            Home\n          </Link>\n\n          <Link\n            className={cn('navbar-item', {\n              'has-background-grey-lighter':\n                location.pathname.startsWith('/people'),\n            })}\n            to=\"/people\"\n          >\n            People\n          </Link>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { useQuery } from '@tanstack/react-query';\nimport { useState } from 'react';\nimport { getPeople } from '../api';\nimport { Person } from '../types/Person';\n\nexport const useFetchPeople = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const { isLoading, isError, isFetching } = useQuery(['people'], getPeople, {\n    onSuccess: (data) => {\n      setPeople(\n        data.map((person) => ({\n          ...person,\n          mother: data.find((mother) => mother.name === person.motherName),\n          father: data.find((father) => father.name === person.fatherName),\n        })),\n      );\n    },\n  });\n\n  return {\n    people,\n    isLoading,\n    isError,\n    isFetching,\n  };\n};\n","import cn from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types/Person';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink = ({ person }: Props) => {\n  return (\n    <Link\n      to={`/people/${person.slug}`}\n      className={cn(\n        { 'has-text-danger': person.sex === 'f' },\n      )}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { useFetchPeople } from '../../hooks/useFetchPeople';\nimport { PersonLink } from '../PersonLink';\nimport { Loader } from '../Loader';\n\nexport const PeopleTable = () => {\n  const { people, isLoading, isFetching } = useFetchPeople();\n  const { slug } = useParams<{ slug: string }>();\n\n  if (isLoading || isFetching) {\n    return <Loader />;\n  }\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {\n          // eslint-disable-next-line\n          people &&\n            people.map((person) => (\n              <tr\n                data-cy=\"person\"\n                key={person.slug}\n                className={cn({\n                  'has-background-warning': person.slug === slug,\n                })}\n              >\n                <td>\n                  <PersonLink person={person} />\n                </td>\n\n                <td>{person.sex}</td>\n                <td>{person.born}</td>\n                <td>{person.died}</td>\n                <td>\n                  {person.mother ? (\n                    <PersonLink person={person.mother} />\n                  ) : (\n                    <span className=\"has-text-grey\">\n                      {person.motherName || '-'}\n                    </span>\n                  )}\n                </td>\n                <td>\n                  {person.father ? (\n                    <PersonLink person={person.father} />\n                  ) : (\n                    <span className=\"has-text-grey\">\n                      {person.fatherName || '-'}\n                    </span>\n                  )}\n                </td>\n              </tr>\n            ))\n        }\n      </tbody>\n    </table>\n  );\n};\n","import { useFetchPeople } from '../hooks/useFetchPeople';\nimport { PeopleTable } from '../components/PeopleTable';\n\nexport const PeoplePage = () => {\n  const { people, isError } = useFetchPeople();\n\n  return (\n    <div>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {!people && (\n            <p data-cy=\"noPeopleMessage\">There are no people on the server</p>\n          )}\n\n          <PeopleTable />\n\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\n\nimport './App.scss';\nimport { Navigation } from './components/Navigation';\nimport { PeoplePage } from './pages/PeoplePage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navigation />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<h1 className=\"title\">Home Page</h1>} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"/people\" element={<PeoplePage />} />\n          <Route path=\"/people/:slug\" element={<PeoplePage />} />\n          <Route path=\"*\" element={<h1 className=\"title\">Page not found</h1>} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\nconst queryClient = new QueryClient();\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <QueryClientProvider client={queryClient}>\n        <App />\n      </QueryClientProvider>\n    </Router>,\n  );\n"],"sourceRoot":""}